/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as StoreLearnImport } from './routes/store-learn'
import { Route as AboutImport } from './routes/about'
import { Route as TodosIndexImport } from './routes/todos/index'
import { Route as PostsIndexImport } from './routes/posts/index'
import { Route as TodosTodoIdImport } from './routes/todos/$todoId'
import { Route as PostsPostIdImport } from './routes/posts/$postId'

// Create/Update Routes

const StoreLearnRoute = StoreLearnImport.update({
  id: '/store-learn',
  path: '/store-learn',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const TodosIndexRoute = TodosIndexImport.update({
  id: '/todos/',
  path: '/todos/',
  getParentRoute: () => rootRoute,
} as any)

const PostsIndexRoute = PostsIndexImport.update({
  id: '/posts/',
  path: '/posts/',
  getParentRoute: () => rootRoute,
} as any)

const TodosTodoIdRoute = TodosTodoIdImport.update({
  id: '/todos/$todoId',
  path: '/todos/$todoId',
  getParentRoute: () => rootRoute,
} as any)

const PostsPostIdRoute = PostsPostIdImport.update({
  id: '/posts/$postId',
  path: '/posts/$postId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/store-learn': {
      id: '/store-learn'
      path: '/store-learn'
      fullPath: '/store-learn'
      preLoaderRoute: typeof StoreLearnImport
      parentRoute: typeof rootRoute
    }
    '/posts/$postId': {
      id: '/posts/$postId'
      path: '/posts/$postId'
      fullPath: '/posts/$postId'
      preLoaderRoute: typeof PostsPostIdImport
      parentRoute: typeof rootRoute
    }
    '/todos/$todoId': {
      id: '/todos/$todoId'
      path: '/todos/$todoId'
      fullPath: '/todos/$todoId'
      preLoaderRoute: typeof TodosTodoIdImport
      parentRoute: typeof rootRoute
    }
    '/posts/': {
      id: '/posts/'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsIndexImport
      parentRoute: typeof rootRoute
    }
    '/todos/': {
      id: '/todos/'
      path: '/todos'
      fullPath: '/todos'
      preLoaderRoute: typeof TodosIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/about': typeof AboutRoute
  '/store-learn': typeof StoreLearnRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/todos/$todoId': typeof TodosTodoIdRoute
  '/posts': typeof PostsIndexRoute
  '/todos': typeof TodosIndexRoute
}

export interface FileRoutesByTo {
  '/about': typeof AboutRoute
  '/store-learn': typeof StoreLearnRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/todos/$todoId': typeof TodosTodoIdRoute
  '/posts': typeof PostsIndexRoute
  '/todos': typeof TodosIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/about': typeof AboutRoute
  '/store-learn': typeof StoreLearnRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/todos/$todoId': typeof TodosTodoIdRoute
  '/posts/': typeof PostsIndexRoute
  '/todos/': typeof TodosIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/about'
    | '/store-learn'
    | '/posts/$postId'
    | '/todos/$todoId'
    | '/posts'
    | '/todos'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/about'
    | '/store-learn'
    | '/posts/$postId'
    | '/todos/$todoId'
    | '/posts'
    | '/todos'
  id:
    | '__root__'
    | '/about'
    | '/store-learn'
    | '/posts/$postId'
    | '/todos/$todoId'
    | '/posts/'
    | '/todos/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AboutRoute: typeof AboutRoute
  StoreLearnRoute: typeof StoreLearnRoute
  PostsPostIdRoute: typeof PostsPostIdRoute
  TodosTodoIdRoute: typeof TodosTodoIdRoute
  PostsIndexRoute: typeof PostsIndexRoute
  TodosIndexRoute: typeof TodosIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  AboutRoute: AboutRoute,
  StoreLearnRoute: StoreLearnRoute,
  PostsPostIdRoute: PostsPostIdRoute,
  TodosTodoIdRoute: TodosTodoIdRoute,
  PostsIndexRoute: PostsIndexRoute,
  TodosIndexRoute: TodosIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/about",
        "/store-learn",
        "/posts/$postId",
        "/todos/$todoId",
        "/posts/",
        "/todos/"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/store-learn": {
      "filePath": "store-learn.tsx"
    },
    "/posts/$postId": {
      "filePath": "posts/$postId.tsx"
    },
    "/todos/$todoId": {
      "filePath": "todos/$todoId.tsx"
    },
    "/posts/": {
      "filePath": "posts/index.tsx"
    },
    "/todos/": {
      "filePath": "todos/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
